<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.in.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.in.pojo.Teacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tname" property="tname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="IDCode" property="idcode" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="introduceCode" property="introducecode" jdbcType="VARCHAR" />
    <result column="teachYear" property="teachyear" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="headUrl" property="headurl" jdbcType="VARCHAR" />
    <result column="totalClass" property="totalclass" jdbcType="DOUBLE" />
    <result column=" totalStudent" property="totalstudent" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.in.pojo.TeacherWithBLOBs" extends="BaseResultMap" >
    <result column="honor" property="honor" jdbcType="LONGVARCHAR" />
    <result column="experience" property="experience" jdbcType="LONGVARCHAR" />
    <result column="feature" property="feature" jdbcType="LONGVARCHAR" />
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tname, password, sex, IDCode, level, area, phone, age, introduceCode, teachYear, 
    education, title, subject, headUrl, totalClass, " totalStudent"
  </sql>
  <sql id="Blob_Column_List" >
    honor, experience, feature, message
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.in.pojo.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.in.pojo.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.in.pojo.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.in.pojo.TeacherWithBLOBs" >
    insert into teacher (id, tname, password, 
      sex, IDCode, level, 
      area, phone, age, introduceCode, 
      teachYear, education, title, 
      subject, headUrl, totalClass, 
      " totalStudent", honor, experience, 
      feature, message)
    values (#{id,jdbcType=INTEGER}, #{tname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{idcode,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{introducecode,jdbcType=VARCHAR}, 
      #{teachyear,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{headurl,jdbcType=VARCHAR}, #{totalclass,jdbcType=DOUBLE}, 
      #{totalstudent,jdbcType=INTEGER}, #{honor,jdbcType=LONGVARCHAR}, #{experience,jdbcType=LONGVARCHAR}, 
      #{feature,jdbcType=LONGVARCHAR}, #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.in.pojo.TeacherWithBLOBs" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tname != null" >
        tname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="idcode != null" >
        IDCode,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="introducecode != null" >
        introduceCode,
      </if>
      <if test="teachyear != null" >
        teachYear,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="headurl != null" >
        headUrl,
      </if>
      <if test="totalclass != null" >
        totalClass,
      </if>
      <if test="totalstudent != null" >
        " totalStudent",
      </if>
      <if test="honor != null" >
        honor,
      </if>
      <if test="experience != null" >
        experience,
      </if>
      <if test="feature != null" >
        feature,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tname != null" >
        #{tname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="idcode != null" >
        #{idcode,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="introducecode != null" >
        #{introducecode,jdbcType=VARCHAR},
      </if>
      <if test="teachyear != null" >
        #{teachyear,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="headurl != null" >
        #{headurl,jdbcType=VARCHAR},
      </if>
      <if test="totalclass != null" >
        #{totalclass,jdbcType=DOUBLE},
      </if>
      <if test="totalstudent != null" >
        #{totalstudent,jdbcType=INTEGER},
      </if>
      <if test="honor != null" >
        #{honor,jdbcType=LONGVARCHAR},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=LONGVARCHAR},
      </if>
      <if test="feature != null" >
        #{feature,jdbcType=LONGVARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.in.pojo.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tname != null" >
        tname = #{record.tname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.idcode != null" >
        IDCode = #{record.idcode,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.introducecode != null" >
        introduceCode = #{record.introducecode,jdbcType=VARCHAR},
      </if>
      <if test="record.teachyear != null" >
        teachYear = #{record.teachyear,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.headurl != null" >
        headUrl = #{record.headurl,jdbcType=VARCHAR},
      </if>
      <if test="record.totalclass != null" >
        totalClass = #{record.totalclass,jdbcType=DOUBLE},
      </if>
      <if test="record.totalstudent != null" >
        " totalStudent" = #{record.totalstudent,jdbcType=INTEGER},
      </if>
      <if test="record.honor != null" >
        honor = #{record.honor,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.experience != null" >
        experience = #{record.experience,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.feature != null" >
        feature = #{record.feature,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      tname = #{record.tname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      IDCode = #{record.idcode,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      introduceCode = #{record.introducecode,jdbcType=VARCHAR},
      teachYear = #{record.teachyear,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      headUrl = #{record.headurl,jdbcType=VARCHAR},
      totalClass = #{record.totalclass,jdbcType=DOUBLE},
      " totalStudent" = #{record.totalstudent,jdbcType=INTEGER},
      honor = #{record.honor,jdbcType=LONGVARCHAR},
      experience = #{record.experience,jdbcType=LONGVARCHAR},
      feature = #{record.feature,jdbcType=LONGVARCHAR},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      tname = #{record.tname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      IDCode = #{record.idcode,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      introduceCode = #{record.introducecode,jdbcType=VARCHAR},
      teachYear = #{record.teachyear,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      headUrl = #{record.headurl,jdbcType=VARCHAR},
      totalClass = #{record.totalclass,jdbcType=DOUBLE},
      " totalStudent" = #{record.totalstudent,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.in.pojo.TeacherWithBLOBs" >
    update teacher
    <set >
      <if test="tname != null" >
        tname = #{tname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="idcode != null" >
        IDCode = #{idcode,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="introducecode != null" >
        introduceCode = #{introducecode,jdbcType=VARCHAR},
      </if>
      <if test="teachyear != null" >
        teachYear = #{teachyear,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="headurl != null" >
        headUrl = #{headurl,jdbcType=VARCHAR},
      </if>
      <if test="totalclass != null" >
        totalClass = #{totalclass,jdbcType=DOUBLE},
      </if>
      <if test="totalstudent != null" >
        " totalStudent" = #{totalstudent,jdbcType=INTEGER},
      </if>
      <if test="honor != null" >
        honor = #{honor,jdbcType=LONGVARCHAR},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=LONGVARCHAR},
      </if>
      <if test="feature != null" >
        feature = #{feature,jdbcType=LONGVARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.in.pojo.TeacherWithBLOBs" >
    update teacher
    set tname = #{tname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      IDCode = #{idcode,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      introduceCode = #{introducecode,jdbcType=VARCHAR},
      teachYear = #{teachyear,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      headUrl = #{headurl,jdbcType=VARCHAR},
      totalClass = #{totalclass,jdbcType=DOUBLE},
      " totalStudent" = #{totalstudent,jdbcType=INTEGER},
      honor = #{honor,jdbcType=LONGVARCHAR},
      experience = #{experience,jdbcType=LONGVARCHAR},
      feature = #{feature,jdbcType=LONGVARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.in.pojo.Teacher" >
    update teacher
    set tname = #{tname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      IDCode = #{idcode,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      introduceCode = #{introducecode,jdbcType=VARCHAR},
      teachYear = #{teachyear,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      headUrl = #{headurl,jdbcType=VARCHAR},
      totalClass = #{totalclass,jdbcType=DOUBLE},
      " totalStudent" = #{totalstudent,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>